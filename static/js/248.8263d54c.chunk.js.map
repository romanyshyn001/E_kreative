{"version":3,"file":"static/js/248.8263d54c.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Pagination/Pagination.module.css?4da5","components/Pagination/Pagination.jsx","redux/slices/announcementSlices/announcementSelectors.js","webpack://my-app/./src/pages/Announcements/Add/AddArticle.module.css?ed33","pages/Announcements/Add/AddAnnouncement.jsx","webpack://my-app/./src/pages/Announcements/AnnouncementsMain.module.css?df48","webpack://my-app/./src/pages/Announcements/Delete/DeleteAnnouncements.module.css?a788","pages/Announcements/Delete/DeleteAnnouncements.jsx","webpack://my-app/./src/pages/Announcements/Update/UpdateAnnouncements.module.css?5871","pages/Announcements/Update/UpdateAnnouncements.jsx","pages/Announcements/AnnouncementsMain.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"Pagination_pagination__eyq6I\",\"active\":\"Pagination_active__gBX40\",\"selectedPage\":\"Pagination_selectedPage__Tehc2\"};","import React from \"react\";\r\nimport s from \"./Pagination.module.css\";\r\n\r\nconst Pagination = (props) => {\r\n  let pagesCount = Math.ceil(props.totalPostCount / props.perPage);\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n  \r\n  return (\r\n    <nav className={s.pagination}>\r\n      {pages.map((page) => {\r\n        return (\r\n          <span\r\n            className={props.currentPage === page ? s.selectedPage : null}\r\n            onClick={() => props.onChange(page)}\r\n            key={page}\r\n          >\r\n            {page}\r\n          </span>\r\n        );\r\n      })}\r\n    </nav>\r\n  );\r\n};\r\nexport default Pagination;\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst getAnnouncements = (state) => {\r\n  return state.announcements;\r\n};\r\n\r\nexport const announcementSelector = createSelector(getAnnouncements, (announcements) => {\r\n  return announcements;\r\n});\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postTitle\":\"AddArticle_postTitle__xfekB\",\"textInput\":\"AddArticle_textInput__WuUIp\",\"btn\":\"AddArticle_btn__mrBY5\",\"handlesPostStatus\":\"AddArticle_handlesPostStatus__kXXiW\",\"userError\":\"AddArticle_userError__7vWS-\"};","import React, { useEffect, useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport s from \"./AddArticle.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  addAnnouncementLoading,\r\n  defaultError,\r\n} from \"../../../redux/slices/announcementSlices/announcements\";\r\n\r\nconst AddAnnoucement = (props) => {\r\n  // console.log('props', props)\r\n  const dispatch = useDispatch();\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [buttonStatus, setButtonStatus] = useState(false);\r\n\r\n  const addTitle = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const addBody = (e) => {\r\n    setBody(e.target.value);\r\n  };\r\n\r\n  const onSavePostClicked = () => {\r\n    const createdAt = new Date().toISOString();\r\n    if (props.user) {\r\n      if (title && body) {\r\n        const options = {\r\n          title: title,\r\n          body: body,\r\n          userId: props.user.id,\r\n          createdAt: createdAt,\r\n        };\r\n        dispatch(addAnnouncementLoading(options));\r\n        setTitle(\"\");\r\n        setBody(\"\");\r\n      }\r\n    } else {\r\n      setButtonStatus(true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (props.errorStatus === \"addRejected\") {\r\n      setErrorMessage(\"*Something went wrong... Try again later\");\r\n    }\r\n\r\n    return () => {\r\n      setTimeout(() => {\r\n        dispatch(defaultError());\r\n        setErrorMessage(\"\");\r\n      }, 10000);\r\n      setButtonStatus(false);\r\n    };\r\n  }, [dispatch, setErrorMessage, props.errorStatus]);\r\n\r\n  return (\r\n    <section>\r\n      <h2>Announcement</h2>\r\n      <form>\r\n        <label htmlFor=\"postTitle\">Title:</label>\r\n        <input\r\n          className={s.postTitle}\r\n          type=\"text\"\r\n          id=\"postTitle\"\r\n          name=\"postTitle\"\r\n          onChange={addTitle}\r\n          value={title}\r\n          alt={'Input Title'}\r\n        />\r\n        <label htmlFor=\"postContent\">Content:</label>\r\n        <textarea\r\n          className={s.textInput}\r\n          id=\"postContent\"\r\n          name=\"postContent\"\r\n          onChange={addBody}\r\n          value={body}\r\n        />\r\n      </form>\r\n      <div className={s.handlesPostStatus}>\r\n        {buttonStatus && (\r\n          <div>\r\n            <span className={s.userError}>*You are not autorized</span>\r\n          </div>\r\n        )}\r\n        <div>\r\n          <span className={s.userError}>{errorMessage}</span>\r\n        </div>\r\n        <button className={s.btn} type=\"button\" onClick={onSavePostClicked}>\r\n          Add post\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default AddAnnoucement;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AnnouncementsMain_container__mqi1I\",\"info\":\"AnnouncementsMain_info__LoNz8\",\"action\":\"AnnouncementsMain_action__gvBo8\",\"messageError\":\"AnnouncementsMain_messageError__F41C2\"};","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"DeleteAnnouncements_btn__okq7h\",\"messageError\":\"DeleteAnnouncements_messageError__vYmNj\",\"action\":\"DeleteAnnouncements_action__ENk+W\",\"removePost\":\"DeleteAnnouncements_removePost__1Vfcg\"};","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  defaultError,\r\n  removeAnnouncementLoading,\r\n} from \"../../../redux/slices/announcementSlices/announcements\";\r\nimport s from \"./DeleteAnnouncements.module.css\";\r\n\r\nconst DeleteAnnoucement = (props) => {\r\n  const errorStatus = props.errorStatus;\r\n  let announcement = props.announcement;\r\n  const [removeStatus, setRemoveStatus] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const removeAnnouncementHandle = (value) => {\r\n    dispatch(removeAnnouncementLoading(value));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (errorStatus === \"removeRejected\") {\r\n      setRemoveStatus(\"*Can not remove announcement.\");\r\n      setTimeout(() => {\r\n        dispatch(defaultError());\r\n        setRemoveStatus(\"\");\r\n      }, 2000);\r\n    }\r\n  }, [dispatch, errorStatus]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <button\r\n          className={s.btn}\r\n          type=\"submit\"\r\n          onClick={() => removeAnnouncementHandle(announcement)}\r\n        >\r\n          Remove\r\n        </button>\r\n      </div>\r\n      <div className={s.removePost}>\r\n        <span className={s.messageError}>{removeStatus}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DeleteAnnoucement;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"UpdateAnnouncements_btn__LqBIi\",\"editBody\":\"UpdateAnnouncements_editBody__mqGgo\",\"editTitle\":\"UpdateAnnouncements_editTitle__QZSPo\",\"messageError\":\"UpdateAnnouncements_messageError__WGeSa\",\"notifyPostStatus\":\"UpdateAnnouncements_notifyPostStatus__fxYRq\"};","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  defaultError,\r\n  updateAnnouncementLoading,\r\n} from \"../../../redux/slices/announcementSlices/announcements\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport s from \"./UpdateAnnouncements.module.css\";\r\n\r\nconst UpdateAnnouncementMain = (props) => {\r\n  const errorStatus = props.errorStatus;\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const dispatch = useDispatch();\r\n  const [title, setTitle] = useState(props.announcement.title);\r\n  const [body, setBody] = useState(props.announcement.body);\r\n  const [announcementStatus, setAnnouncementStatus] = useState();\r\n\r\n  const titleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const bodyChange = (e) => {\r\n    setBody(e.target.value);\r\n  };\r\n  const onSaveannouncementClicked = () => {\r\n    const updatedAt = new Date().toISOString();\r\n\r\n    if (title && body) {\r\n      const options = {\r\n        id: props.announcement.id,\r\n        title: title,\r\n        body: body,\r\n        updatedAt: updatedAt,\r\n        userId: props.user.id,\r\n      };\r\n      dispatch(updateAnnouncementLoading(options));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (errorStatus === \"editSuccess\") {\r\n      setAnnouncementStatus(\"Saving...\");\r\n      setTimeout(() => {\r\n        setAnnouncementStatus(\"\");\r\n        handleClose();\r\n      }, 500);\r\n    } else if (errorStatus === \"editRejected\") {\r\n      setAnnouncementStatus(\"Announcement not saved. Try again later...\");\r\n      setTimeout(() => {\r\n        setAnnouncementStatus(\"\");\r\n      }, 5000);\r\n    }\r\n    return () => {\r\n      dispatch(defaultError());\r\n    };\r\n  }, [dispatch, errorStatus]);\r\n\r\n  return (\r\n    <section>\r\n      <Button bsPrefix={s.btn} onClick={handleShow}>\r\n        Edit\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Announcement Post</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Label>Announcement title</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={1}\r\n              placeholder={\"Add your text\"}\r\n              value={title}\r\n              onChange={titleChange}\r\n            />\r\n            <Form.Label>Post body</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={4}\r\n              placeholder={\"Add your text\"}\r\n              value={body}\r\n              onChange={bodyChange}\r\n            />\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={onSaveannouncementClicked}>\r\n            Save Changes\r\n          </Button>\r\n          <div>\r\n            <span className={s.notifyPostStatus}>{announcementStatus}</span>\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </section>\r\n  );\r\n};\r\nexport default UpdateAnnouncementMain;\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Pagination from \"../../components/Pagination/Pagination\";\r\nimport { announcementsLoading } from \"../../redux/slices/announcementSlices/announcements\";\r\nimport { announcementSelector } from \"../../redux/slices/announcementSlices/announcementSelectors\";\r\nimport AddAnnoucement from \"./Add/AddAnnouncement\";\r\nimport s from \"./AnnouncementsMain.module.css\";\r\nimport DeleteAnnoucement from \"./Delete/DeleteAnnouncements\";\r\nimport UpdateAnnoucement from \"./Update/UpdateAnnouncements\";\r\n\r\nconst AnnouncementsMain = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    announcements,\r\n    pageNumber,\r\n    totalOnPage,\r\n    totalAnnouncementCount,\r\n    isLoading,\r\n    errorStatus,\r\n    getAnnouncementError,\r\n  } = useSelector((state) => announcementSelector(state));\r\n\r\n  const user = JSON.parse(window.localStorage.getItem(\"user\"));\r\n\r\n  useEffect(() => {\r\n    if (errorStatus === \"addSuccess\") {\r\n      dispatch(announcementsLoading({ pageNumber, totalOnPage }));\r\n    }\r\n    dispatch(announcementsLoading({ pageNumber, totalOnPage }));\r\n  }, [dispatch, pageNumber, totalOnPage, errorStatus]);\r\n\r\n  const onChange = (pageNumber) => {\r\n    dispatch(announcementsLoading({ pageNumber, totalOnPage }));\r\n  };\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <div>\r\n        {getAnnouncementError ? (\r\n          <span className={s.messageError}>*Something went wrong</span>\r\n        ) : (\r\n          <div>\r\n            <div>\r\n              <Pagination\r\n                totalPostCount={totalAnnouncementCount}\r\n                perPage={totalOnPage}\r\n                currentPage={pageNumber}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n            <div>\r\n              <AddAnnoucement user={user} errorStatus={errorStatus} />\r\n            </div>\r\n            {announcements.map((announcement) => (\r\n              <div key={announcement.id}>\r\n                <div className={s.info}>\r\n                  <span>{announcement.title}</span>\r\n                  <div>\r\n                    <p>{announcement.body}</p>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  {user != null ? (\r\n                    <div>\r\n                      {user.id === announcement.userId && (\r\n                        <div className={s.action}>\r\n                          <div>\r\n                            <UpdateAnnoucement\r\n                              user={user}\r\n                              announcement={announcement}\r\n                              errorStatus={errorStatus}\r\n                            />\r\n                          </div>\r\n                          <div>\r\n                            <DeleteAnnoucement\r\n                              announcement={announcement.id}\r\n                              errorStatus={errorStatus}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ) : (\r\n                    <h3 className={s.hidden}>Login for more opportunities</h3>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default AnnouncementsMain;\r\n"],"names":["props","pagesCount","Math","ceil","totalPostCount","perPage","pages","i","push","className","s","map","page","currentPage","onClick","onChange","announcementSelector","createSelector","state","announcements","dispatch","useDispatch","useState","errorMessage","setErrorMessage","title","setTitle","body","setBody","buttonStatus","setButtonStatus","useEffect","errorStatus","setTimeout","defaultError","htmlFor","type","id","name","e","target","value","alt","createdAt","Date","toISOString","user","options","userId","addAnnouncementLoading","announcement","removeStatus","setRemoveStatus","removeAnnouncementLoading","show","setShow","handleClose","announcementStatus","setAnnouncementStatus","Button","bsPrefix","Modal","onHide","closeButton","Form","as","rows","placeholder","variant","updatedAt","updateAnnouncementLoading","useSelector","pageNumber","totalOnPage","totalAnnouncementCount","isLoading","getAnnouncementError","JSON","parse","window","localStorage","getItem","announcementsLoading","Pagination"],"sourceRoot":""}