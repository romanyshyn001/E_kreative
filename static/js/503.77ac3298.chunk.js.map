{"version":3,"file":"static/js/503.77ac3298.chunk.js","mappings":"mLACA,EAAgC,iCAAhC,EAA8E,8BAA9E,EAAqJ,yBAArJ,EAAsN,wBAAtN,EAAoP,uBAApP,EAA0R,gC,2DCyE1R,EAjEkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAyCC,EAAAA,EAAAA,KACvC,SAACC,GAAD,OAAWA,EAAMC,OAAOC,aADlBC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,eAGtB,GAKIC,EAAAA,EAAAA,IAAQ,CAAEC,UAAUC,EAAAA,EAAAA,GAAYC,EAAAA,EAAAA,mBAJlCC,EADF,EACEA,SACAC,EAFF,EAEEA,aAEaC,GAJf,EAGEC,MAHF,EAIEC,UAAaF,QAef,OARAG,EAAAA,EAAAA,YAAU,WACJV,GACFW,YAAW,WACTlB,GAASmB,EAAAA,EAAAA,SACR,OAEJ,CAACZ,EAAgBP,KAGlB,iBAAKoB,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,KAChB,kBAAMD,UAAWC,EAASC,SAAUT,GAfvB,SAACU,GAChBvB,GAASwB,EAAAA,EAAAA,IAAaD,OAcpB,WACE,wCAEA,kBAAOE,QAAQ,OAAf,oBACA,0BACEL,UAAWC,EACXK,YAAY,SACRd,EAAS,QAAS,CAAEe,SAAU,gCAEnCb,EAAOc,QACN,cAAGR,UAAWC,EAAgBQ,KAAK,QAAnC,SACGf,EAAOc,MAAME,WAGlB,kBAAOL,QAAQ,WAAf,uBACA,0BACEM,KAAM,WACNX,UAAWC,EACXK,YAAY,YACRd,EAAS,WAAY,CAAEe,SAAU,2BAEtCb,EAAOkB,kBACN,cAAGZ,UAAWC,EAAgBQ,KAAK,QAAnC,SACGf,EAAOkB,gBAAgBF,UAI3BvB,IACC,gBAAKa,UAAWC,EAAhB,uCAEF,mBAAQU,KAAK,SAASX,UAAWC,EAAjC,uBAIF,yBAAMf,IAAgB,SAAC,KAAD,CAAU2B,GAAI,kB,mCCpE7BtB,EAAa,CACxBuB,gBAAiBC,EAAAA,GAAW,CAC1BC,SAAUD,EAAAA,KACPE,IAAI,GAAI,+BACRV,SAAS,aACZC,MAAOO,EAAAA,KAAaP,MAAM,kBAAkBD,SAAS,eACpDA,WACHW,mBAAoBH,EAAAA,GAAW,CAC7BC,SAAUD,EAAAA,KACPE,IAAI,GAAI,+BACRV,SAAS,aACZC,MAAOO,EAAAA,KAAaP,MAAM,kBAAkBD,SAAS,aACrDY,UAAWJ,EAAAA,KAAaR,SAAS,aACjCa,SAAUL,EAAAA,KAAaR,SAAS,aAChCc,IAAKN,EAAAA,KAAaR,SAAS,aAC3Be,UAAWP,EAAAA,KACRR,SAAS,aACTgB,MAAM,CAACR,EAAAA,GAAQ,aAAc,0BAChCS,OAAQT,EAAAA,OACPR,YAEL","sources":["webpack://my-app/./src/components/Auth/Login/LoginMain.module.css?47ed","components/Auth/Login/LoginMain.jsx","utils/validators/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"authContainer\":\"LoginMain_authContainer__yqkTO\",\"background\":\"LoginMain_background__Dv6Cb\",\"shape\":\"LoginMain_shape__VTsRq\",\"login\":\"LoginMain_login__CsAVS\",\"check\":\"LoginMain_check__8qcQm\",\"text\":\"LoginMain_text__9-4TU\",\"btn\":\"LoginMain_btn__77nZZ\",\"ErrorMessage\":\"LoginMain_ErrorMessage__H-vZo\"};","import React, { useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport s from \"./LoginMain.module.css\";\r\nimport { authorizeSuccess, loginLoading } from \"../../../redux/slices/authMe\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport validators from \"../../../utils/validators/validators\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst LoginMain = () => {\r\n  const dispatch = useDispatch();\r\n  const { isAuthorized, authorizeError } = useSelector(\r\n    (state) => state.authMe.authorize\r\n  );\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { errors },\r\n  } = useForm({ resolver: yupResolver(validators.validationLogin) });\r\n\r\n  const onSubmit = (credentials) => {\r\n    dispatch(loginLoading(credentials));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (authorizeError) {\r\n      setTimeout(() => {\r\n        dispatch(authorizeSuccess());\r\n      }, 3000);\r\n    }\r\n  }, [authorizeError, dispatch]);\r\n\r\n  return (\r\n    <div className={s.authContainer}>\r\n      <div className={s.background}></div>\r\n      <form className={s.login} onSubmit={handleSubmit(onSubmit)}>\r\n        <h3>Login Here</h3>\r\n\r\n        <label htmlFor=\"Mail\">Email</label>\r\n        <input\r\n          className={s.text}\r\n          placeholder=\"Email\"\r\n          {...register(\"email\", { required: \"Email Address is required\" })}\r\n        />\r\n        {errors.email && (\r\n          <p className={s.ErrorMessage} role=\"alert\">\r\n            {errors.email.message}\r\n          </p>\r\n        )}\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          type={\"password\"}\r\n          className={s.text}\r\n          placeholder=\"Password\"\r\n          {...register(\"password\", { required: \"Password is required\" })}\r\n        />\r\n        {errors.passwordConfirm && (\r\n          <p className={s.ErrorMessage} role=\"alert\">\r\n            {errors.passwordConfirm.message}\r\n          </p>\r\n        )}\r\n\r\n        {authorizeError && (\r\n          <div className={s.ErrorMessage}>Invalid mail or password</div>\r\n        )}\r\n        <button type=\"submit\" className={s.btn}>\r\n          Login\r\n        </button>\r\n      </form>\r\n      <div>{isAuthorized && <Navigate to={\"/posts\"} />}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default LoginMain;\r\n","import * as Yup from \"yup\";\r\n\r\nexport const validators = {\r\n  validationLogin: Yup.object({\r\n    password: Yup.string()\r\n      .max(15, \"*Must contain 15 characters\")\r\n      .required(\"*Required\"),\r\n    email: Yup.string().email(\"*Invalid Email\").required(\"*Required\"),\r\n  }).required(),\r\n  validationRegister: Yup.object({\r\n    password: Yup.string()\r\n      .max(15, \"*Must contain 15 characters\")\r\n      .required(\"*Required\"),\r\n    email: Yup.string().email(\"*Invalid Email\").required(\"*Required\"),\r\n    firstname: Yup.string().required(\"*Required\"),\r\n    lastname: Yup.string().required(\"*Required\"),\r\n    age: Yup.string().required(\"*Required\"),\r\n    cpassword: Yup.string()\r\n      .required(\"*Required\")\r\n      .oneOf([Yup.ref(\"password\")], \"Passwords do not match\"),\r\n    avatar: Yup.string(),\r\n  }).required(),\r\n};\r\nexport default validators;\r\n"],"names":["dispatch","useDispatch","useSelector","state","authMe","authorize","isAuthorized","authorizeError","useForm","resolver","yupResolver","validators","register","handleSubmit","errors","watch","formState","useEffect","setTimeout","authorizeSuccess","className","s","onSubmit","credentials","loginLoading","htmlFor","placeholder","required","email","role","message","type","passwordConfirm","to","validationLogin","Yup","password","max","validationRegister","firstname","lastname","age","cpassword","oneOf","avatar"],"sourceRoot":""}